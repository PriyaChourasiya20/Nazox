{"ast":null,"code":"import firebase from \"firebase/app\"; // Add the Firebase products that you want to use\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    this.registerUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.loginUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.forgetPassword = email => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        }).then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.logout = () => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signOut().then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.setLoggeedInUser = user => {\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\n    };\n\n    this.getAuthenticatedUser = () => {\n      if (!localStorage.getItem(\"authUser\")) return null;\n      return JSON.parse(localStorage.getItem(\"authUser\"));\n    };\n\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem(\"authUser\");\n        }\n      });\n    }\n  }\n  /**\r\n   * Registers the user with given details\r\n   */\n\n\n  /**\r\n   * Handle the error\r\n   * @param {*} error\r\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n\n}\n\nlet _fireBaseBackend = null;\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\n\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n\n  return _fireBaseBackend;\n};\n/**\r\n * Returns the firebase backend\r\n */\n\n\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\n\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"sources":["/home/rovi91/Downloads/copy (new)/src/helpers/firebase_helper.js"],"sourcesContent":["import firebase from \"firebase/app\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nclass FirebaseAuthBackend {\r\n  constructor(firebaseConfig) {\r\n    if (firebaseConfig) {\r\n      // Initialize Firebase\r\n      firebase.initializeApp(firebaseConfig);\r\n      firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\r\n        } else {\r\n          localStorage.removeItem(\"authUser\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers the user with given details\r\n   */\r\n  registerUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(\r\n          user => {\r\n            resolve(firebase.auth().currentUser);\r\n          },\r\n          error => {\r\n            reject(this._handleError(error));\r\n          }\r\n        );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Login user with given details\r\n   */\r\n  loginUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(\r\n          user => {\r\n            resolve(firebase.auth().currentUser);\r\n          },\r\n          error => {\r\n            reject(this._handleError(error));\r\n          }\r\n        );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * forget Password user with given details\r\n   */\r\n  forgetPassword = email => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(email, {\r\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\r\n        })\r\n        .then(() => {\r\n          resolve(true);\r\n        })\r\n        .catch(error => {\r\n          reject(this._handleError(error));\r\n        });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Logout the user\r\n   */\r\n  logout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          resolve(true);\r\n        })\r\n        .catch(error => {\r\n          reject(this._handleError(error));\r\n        });\r\n    });\r\n  };\r\n\r\n  setLoggeedInUser = user => {\r\n    localStorage.setItem(\"authUser\", JSON.stringify(user));\r\n  };\r\n\r\n  /**\r\n   * Returns the authenticated user\r\n   */\r\n  getAuthenticatedUser = () => {\r\n    if (!localStorage.getItem(\"authUser\")) return null;\r\n    return JSON.parse(localStorage.getItem(\"authUser\"));\r\n  };\r\n\r\n  /**\r\n   * Handle the error\r\n   * @param {*} error\r\n   */\r\n  _handleError(error) {\r\n    // var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    return errorMessage;\r\n  }\r\n}\r\n\r\nlet _fireBaseBackend = null;\r\n\r\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\r\nconst initFirebaseBackend = config => {\r\n  if (!_fireBaseBackend) {\r\n    _fireBaseBackend = new FirebaseAuthBackend(config);\r\n  }\r\n  return _fireBaseBackend;\r\n};\r\n\r\n/**\r\n * Returns the firebase backend\r\n */\r\nconst getFirebaseBackend = () => {\r\n  return _fireBaseBackend;\r\n};\r\n\r\nexport { initFirebaseBackend, getFirebaseBackend };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}