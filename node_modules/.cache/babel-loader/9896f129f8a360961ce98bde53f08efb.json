{"ast":null,"code":"import axios from \"axios\";\nimport { del, get, post, put } from \"./api_helper\";\nimport * as url from \"./url_helper\"; // Gets the logged in user data from local session\n\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"authUser\");\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\n\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\n\nconst postRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    var message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postLogin = (url, data) => {\n  console.log(url, \"url===>\");\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    console.log(\"success=======>\", response);\n    return response.data;\n  }).catch(err => {\n    console.log(\"error facebackend==>\", err);\n    throw err[1];\n  });\n}; // postForgetPwd\n\n\nconst postForgetPwd = (url, data) => {\n  console.log(\"forgoturl\", url);\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n}; // get Events\n// export const getEvents = () =>\n//     get(url.GET_EVENTS)\n// // add Events\n// export const addNewEvent = event => post(url.ADD_NEW_EVENT, event)\n// // update Event\n// export const updateEvent = event => put(url.UPDATE_EVENT, event)\n// // delete Event\n// export const deleteEvent = event =>\n//     del(url.DELETE_EVENT, { headers: { event } })\n// // get Categories\n// export const getCategories = () => get(url.GET_CATEGORIES)\n// // get Products\n// export const getProducts = () => get(url.GET_PRODUCTS)\n// // get Product detail\n// export const getProductDetail = id =>\n//   get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } })\n// // get orders\n// export const getOrders = () => get(url.GET_ORDERS)\n// // add order\n// export const addNewOrder = order => post(url.ADD_NEW_ORDER, order)\n// // update order\n// export const updateOrder = order => put(url.UPDATE_ORDER, order)\n// // delete order\n// export const deleteOrder = order =>\n//   del(url.DELETE_ORDER, { headers: { order } })\n// // get cart data\n// export const getCartData = () => get(url.GET_CART_DATA)\n// // get customers\n// export const getCustomers = () => get(url.GET_CUSTOMERS)\n// // get shops\n// export const getShops = () => get(url.GET_SHOPS)\n// // get chats\n// export const getChats = () => get(url.GET_CHATS)\n// // get groups\n// export const getGroups = () => get(url.GET_GROUPS)\n// // get Contacts\n// export const getContacts = () => get(url.GET_CONTACTS)\n// // get messages\n// export const getMessages = (roomId = \"\") =>\n//   get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } })\n// post messages\n// export const addMessage = message => post(url.ADD_MESSAGE, message)\n\n\nexport { getLoggedInUser, isUserAuthenticated, postRegister, postLogin, postForgetPwd };","map":{"version":3,"names":["axios","del","get","post","put","url","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postRegister","data","then","response","status","catch","err","message","postLogin","console","log","postForgetPwd"],"sources":["/home/rovi91/Downloads/copy (new)/src/helpers/fackBackend_Helper.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { del, get, post, put } from \"./api_helper\";\r\nimport * as url from \"./url_helper\";\r\n\r\n// Gets the logged in user data from local session\r\nconst getLoggedInUser = () => {\r\n  const user = localStorage.getItem(\"authUser\");\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n//is user is logged in\r\nconst isUserAuthenticated = () => {\r\n  return getLoggedInUser() !== null;\r\n};\r\n\r\n// Register Method\r\nconst postRegister = (url, data) => {\r\n  return axios\r\n    .post(url, data)\r\n    .then((response) => {\r\n      if (response.status >= 200 || response.status <= 299)\r\n        return response.data;\r\n      throw response.data;\r\n    })\r\n    .catch((err) => {\r\n      var message;\r\n      if (err.response && err.response.status) {\r\n        switch (err.response.status) {\r\n          case 404:\r\n            message = \"Sorry! the page you are looking for could not be found\";\r\n            break;\r\n          case 500:\r\n            message =\r\n              \"Sorry! something went wrong, please contact our support team\";\r\n            break;\r\n          case 401:\r\n            message = \"Invalid credentials\";\r\n            break;\r\n          default:\r\n            message = err[1];\r\n            break;\r\n        }\r\n      }\r\n      throw message;\r\n    });\r\n};\r\n\r\n// Login Method\r\nconst postLogin = (url, data) => {\r\n  console.log(url, \"url===>\");\r\n  return axios\r\n    .post(url, data)\r\n    .then((response) => {\r\n      if (response.status === 400 || response.status === 500)\r\n        throw response.data;\r\n      console.log(\"success=======>\", response);\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"error facebackend==>\", err);\r\n      throw err[1];\r\n    });\r\n};\r\n\r\n// postForgetPwd\r\nconst postForgetPwd = (url, data) => {\r\n  console.log(\"forgoturl\", url);\r\n  return axios\r\n    .post(url, data)\r\n    .then((response) => {\r\n      if (response.status === 400 || response.status === 500)\r\n        throw response.data;\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      throw err[1];\r\n    });\r\n};\r\n// get Events\r\n// export const getEvents = () =>\r\n//     get(url.GET_EVENTS)\r\n\r\n// // add Events\r\n// export const addNewEvent = event => post(url.ADD_NEW_EVENT, event)\r\n\r\n// // update Event\r\n// export const updateEvent = event => put(url.UPDATE_EVENT, event)\r\n\r\n// // delete Event\r\n// export const deleteEvent = event =>\r\n//     del(url.DELETE_EVENT, { headers: { event } })\r\n\r\n// // get Categories\r\n// export const getCategories = () => get(url.GET_CATEGORIES)\r\n\r\n// // get Products\r\n// export const getProducts = () => get(url.GET_PRODUCTS)\r\n\r\n// // get Product detail\r\n// export const getProductDetail = id =>\r\n//   get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } })\r\n\r\n// // get orders\r\n// export const getOrders = () => get(url.GET_ORDERS)\r\n\r\n// // add order\r\n// export const addNewOrder = order => post(url.ADD_NEW_ORDER, order)\r\n\r\n// // update order\r\n// export const updateOrder = order => put(url.UPDATE_ORDER, order)\r\n\r\n// // delete order\r\n// export const deleteOrder = order =>\r\n//   del(url.DELETE_ORDER, { headers: { order } })\r\n\r\n// // get cart data\r\n// export const getCartData = () => get(url.GET_CART_DATA)\r\n\r\n// // get customers\r\n// export const getCustomers = () => get(url.GET_CUSTOMERS)\r\n\r\n// // get shops\r\n// export const getShops = () => get(url.GET_SHOPS)\r\n\r\n// // get chats\r\n// export const getChats = () => get(url.GET_CHATS)\r\n\r\n// // get groups\r\n// export const getGroups = () => get(url.GET_GROUPS)\r\n\r\n// // get Contacts\r\n// export const getContacts = () => get(url.GET_CONTACTS)\r\n\r\n// // get messages\r\n// export const getMessages = (roomId = \"\") =>\r\n//   get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } })\r\n\r\n// post messages\r\n// export const addMessage = message => post(url.ADD_MESSAGE, message)\r\n\r\nexport {\r\n  getLoggedInUser,\r\n  isUserAuthenticated,\r\n  postRegister,\r\n  postLogin,\r\n  postForgetPwd,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}