{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport translationGr from './locales/gr/translation.json';\nimport translationIT from './locales/it/translation.json';\nimport translationRS from './locales/rs/translation.json';\nimport translationSP from './locales/sp/translation.json';\nimport translationENG from './locales/en/translation.json'; //translations\n\nconst resources = {\n  gr: {\n    translation: translationGr\n  },\n  it: {\n    translation: translationIT\n  },\n  rs: {\n    translation: translationRS\n  },\n  sp: {\n    translation: translationSP\n  },\n  eng: {\n    translation: translationENG\n  }\n};\ni18n.use(detector).use(reactI18nextModule) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: \"en\",\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","detector","reactI18nextModule","translationGr","translationIT","translationRS","translationSP","translationENG","resources","gr","translation","it","rs","sp","eng","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"sources":["/home/rovi91/Downloads/copy (new)/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport translationGr from './locales/gr/translation.json';\r\nimport translationIT from './locales/it/translation.json';\r\nimport translationRS from './locales/rs/translation.json';\r\nimport translationSP from './locales/sp/translation.json';\r\nimport translationENG from './locales/en/translation.json';\r\n\r\n//translations\r\nconst resources = {\r\n  gr: {\r\n    translation: translationGr\r\n  },\r\n  it: {\r\n    translation: translationIT\r\n  },\r\n   rs: {\r\n    translation: translationRS\r\n  },\r\n   sp: {\r\n    translation: translationSP\r\n  },\r\n   eng: {\r\n    translation: translationENG\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(detector)\r\n  .use(reactI18nextModule) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE;IACFC,WAAW,EAAEP;EADX,CADY;EAIhBQ,EAAE,EAAE;IACFD,WAAW,EAAEN;EADX,CAJY;EAOfQ,EAAE,EAAE;IACHF,WAAW,EAAEL;EADV,CAPW;EAUfQ,EAAE,EAAE;IACHH,WAAW,EAAEJ;EADV,CAVW;EAafQ,GAAG,EAAE;IACJJ,WAAW,EAAEH;EADT;AAbU,CAAlB;AAkBAP,IAAI,CACDe,GADH,CACOd,QADP,EAEGc,GAFH,CAEOb,kBAFP,EAE2B;AAF3B,CAGGc,IAHH,CAGQ;EACJR,SADI;EAEJS,GAAG,EAAE,IAFD;EAGJC,WAAW,EAAE,IAHT;EAGe;EAEnBC,YAAY,EAAE,KALV;EAKiB;EAErBC,aAAa,EAAE;IACbC,WAAW,EAAE,KADA,CACM;;EADN;AAPX,CAHR;AAeA,eAAerB,IAAf"},"metadata":{},"sourceType":"module"}